suppressMessages(library(ggthemes))
suppressMessages(library(gridExtra))
suppressMessages(library(scales))
suppressMessages(library(ggplot2))
suppressMessages(library(tidyr))
suppressMessages(library(dplyr))
suppressMessages(library(smooth))
suppressMessages(library(astsa))
suppressMessages(library(fpp))
suppressMessages(library(fpp2))
suppressMessages(library(VGAMdata))
suppressMessages(library(GGally))
suppressMessages(library(seasonal))
suppressMessages(library(fpp2))
suppressMessages(library(urca))
suppressMessages(library(astsa))
suppressMessages(library(formattable))
suppressMessages(library(ggplot2))
suppressMessages(library(forecast))
suppressMessages(library(astsa))
suppressMessages(library(lmtest))
suppressMessages(library(fUnitRoots))
suppressMessages(library(FitARMA))
suppressMessages(library(strucchange))
suppressMessages(library(reshape))
suppressMessages(library(Rmisc))
suppressMessages(library(fBasics))
url <- "https://www.openintro.org/stat/data/arbuthnot.csv"
abhutondot <- read.csv(url, header=TRUE)
nrow(abhutondot)
url <- "https://www.openintro.org/stat/data/arbuthnot.csv"
abhutondot <- read.csv(url, header=TRUE)
nrow(abhutondot)
head(abhutondot)
abhutondot_rs <- melt(abhutondot, id = c("year"))
head(abhutondot_rs)
tail(abhutondot_rs)
excess_frac <- (abhutondot$boys - abhutondot$girls)/abhutondot$girls
excess_ts <- ts(excess_frac, frequency = 1, start = abhutondot$year[1])
basicStats(excess_frac)
ggplot(data = abhutondot_rs, aes(x = year)) + geom_line(aes(y = value, colour = variable)) +
scale_colour_manual(values = c("blue", "red"))
autoplot(excess_ts) +  ylab("Taza de varianción de las mujeres") + xlab("Año")
acf2(excess_ts, nlag=60)
(break_point <- breakpoints(excess_ts ~ 1))
plot(break_point)
summary(break_point)
plot(excess_ts)
lines(fitted(break_point, breaks = 1), col = 4)
lines(confint(break_point, breaks = 1))
fitted.ts <- fitted(break_point, breaks = 1)
autoplot(fitted.ts)
plot(excess_ts)
lines(fitted(break_point, breaks = 1), col = 4)
lines(confint(break_point, breaks = 1))
fitted.ts <- fitted(break_point, breaks = 1)
autoplot(fitted.ts)
plot(excess_ts)
lines(fitted(break_point, breaks = 1), col = 4)
lines(confint(break_point, breaks = 1))
fitted.ts <- fitted(break_point, breaks = 1)
autoplot(fitted.ts)
fitted(break_point)[1] ;  fitted(break_point)[42] ;  fitted(break_point)[43] ; fitted(break_point)[82]
#Nótese que el valor resulta como la constante donde la media es estimada, a partir de la observación 43
#vemos un cambio en el nivel de la serie.
###################################
#  Estimación de 6 modelos ARIMA  #
###################################
#Se van a estimar los siguientes 6 modelos:
# 1. non seasonal (1,1,1), as determined by auto.arima() within forecast package
# 2. seasonal (1,0,0)(0,0,1)[10]
# 3. seasonal (1,0,0)(1,0,0)[10]
# 4. seasonal (0,0,0)(0,0,1)[10] with level shift regressor as intervention variable
# 5. seasonal (1,0,0)(0,0,1)[10] with level shift regressor as intervention variable
# 6. non seasonal (1,0,0) with level shift regressor as intervention variable
###################################
#  ARIMA 1. non seasonal (1,1,1)  #
###################################
(model_1 <- auto.arima(excess_ts, stepwise = FALSE, trace = TRUE))
summary(model_1)
#######################################
#  ARIMA 2.  seasonal (1,0,0)(0,0,1)  #
#######################################
model_2 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(0,0,1), period = 10), include.mean = TRUE)
summary(model_2)
#######################################
#  ARIMA 3. seasonal (1,0,0)(1,0,0)   #
#######################################
model_3 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(1,0,0), period = 10), include.mean = TRUE)
summary(model_3)
########################################################
#  ARIMA 4.  seasonal (0,0,0)(0,0,1)                   #
# with level shift regressor as intervention variable  #
########################################################
#OJO!  así es como definims la intervención
level <- c(rep(0, break_point$breakpoints), rep(1, length(excess_ts) - break_point$breakpoints))
# Nótese como introduje variables controles con la función rep
model_4 <- Arima(excess_ts, order = c(0,0,0), seasonal = list(order = c(0,0,1), period = 10), xreg = level, include.mean = TRUE)
summary(model_4)
########################################################
#  ARIMA 5.  seasonal (1,0,0)(0,0,1)                   #
# with level shift regressor as intervention variable  #
########################################################
model_5 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(0,0,1), period=10),  xreg = level, include.mean = TRUE)
summary(model_5)
########################################################
#  6. non seasonal (1,0,0)                             #
# with level shift regressor as intervention variable  #
########################################################
model_6 <- Arima(excess_ts, order = c(1,0,0), xreg = level, include.mean = TRUE)
summary(model_6)
df <- data.frame(col_1_res = c(model_1$aic, model_2$aic, model_3$aic, model_4$aic, model_6$aic),
col_2_res = c(model_1$aicc, model_2$aicc, model_3$aicc, model_4$aicc, model_6$aicc),
col_3_res = c(model_1$bic, model_2$bic, model_3$bic, model_4$bic, model_6$bic))
colnames(df) <- c("AIC", "AICc", "BIC")
rownames(df) <- c("ARIMA(1,1,1)",
"ARIMA(1,0,0)(0,0,1)[10]",
"ARIMA(1,0,0)(1,0,0)[10]",
"ARIMA(0,0,0)(0,0,1)[10] with level shift",
"ARIMA(1,0,0) with level shift")
formattable(df)
horizonte<- 15
plot(forecast(model_4, h = horizonte, xreg = rep(1, horizonte)))
fitted(break_point)[1] ;  fitted(break_point)[42] ;  fitted(break_point)[43] ; fitted(break_point)[82]
(model_1 <- auto.arima(excess_ts, stepwise = FALSE, trace = TRUE))
summary(model_1)
model_2 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(0,0,1), period = 10), include.mean = TRUE)
summary(model_2)
model_3 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(1,0,0), period = 10), include.mean = TRUE)
summary(model_3)
level <- c(rep(0, break_point$breakpoints), rep(1, length(excess_ts) - break_point$breakpoints))
# Nótese como introduje variables controles con la función rep
model_4 <- Arima(excess_ts, order = c(0,0,0), seasonal = list(order = c(0,0,1), period = 10), xreg = level, include.mean = TRUE)
summary(model_4)
model_5 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(0,0,1), period=10),  xreg = level, include.mean = TRUE)
summary(model_5)
########################################################
#  6. non seasonal (1,0,0)                             #
# with level shift regressor as intervention variable  #
########################################################
model_6 <- Arima(excess_ts, order = c(1,0,0), xreg = level, include.mean = TRUE)
summary(model_6)
##################################################
#    Análisis de los residuos de cada uno de     #
#           los modelos estimados                #
##################################################
#El modelo n. ° 5 se retiró del análisis, por lo tanto,sus residuos no se verificarán.
#############
#  Modelo 1 #
#############
checkresiduals(model_1)
LjungBoxTest(residuals(model_1), k = 2, lag.max = 20)
sarima(excess_ts, p = 1, d = 1, q = 1)
#############
#  Modelo 2 #
#############
checkresiduals(model_2)
LjungBoxTest(residuals(model_2), k = 2, lag.max = 20)
sarima(excess_ts, p = 1, d = 0, q = 0, P = 0, D = 0, Q = 1, S = 10)
#############
#  Modelo 3 #
#############
checkresiduals(model_3)
LjungBoxTest(residuals(model_3), k = 2, lag.max = 20)
sarima(excess_ts, p = 1, d = 0, q = 0, P = 1, D = 0, Q = 0, S = 10)
#############
#  Modelo 4 #
#############
checkresiduals(model_4)
LjungBoxTest(residuals(model_4), k = 1, lag.max = 20)
sarima(excess_ts, p = 0, d = 0, q = 0, P = 0, D = 0, Q = 1, S = 10, xreg = level)
#############
#  Modelo 6 #
#############
checkresiduals(model_6)
LjungBoxTest(residuals(model_6), k = 1, lag.max = 20)
sarima(excess_ts, p = 1, d = 0, q = 0, xreg = level)
df <- data.frame(col_1_res = c(model_1$aic, model_2$aic, model_3$aic, model_4$aic, model_6$aic),
col_2_res = c(model_1$aicc, model_2$aicc, model_3$aicc, model_4$aicc, model_6$aicc),
col_3_res = c(model_1$bic, model_2$bic, model_3$bic, model_4$bic, model_6$bic))
colnames(df) <- c("AIC", "AICc", "BIC")
rownames(df) <- c("ARIMA(1,1,1)",
"ARIMA(1,0,0)(0,0,1)[10]",
"ARIMA(1,0,0)(1,0,0)[10]",
"ARIMA(0,0,0)(0,0,1)[10] with level shift",
"ARIMA(1,0,0) with level shift")
formattable(df)
horizonte<- 15
plot(forecast(model_4, h = horizonte, xreg = rep(1, horizonte)))
ggplot(data = abhutondot_rs, aes(x = year)) + geom_line(aes(y = value, colour = variable)) +
scale_colour_manual(values = c("blue", "red"))
abhutondot.ts <- ts(abhutondot$boys + abhutondot$girls, frequency = 1 , start = abhutondot$year[1])
#Gráfica de la varianción de genero según mujeres
autoplot(abhutondot.ts) +  ylab("Total de inviduos") + xlab("Año")
summary(lm(abhutondot.ts ~ 1))
(break_point <- breakpoints(abhutondot.ts ~ 1))
plot(break_point)
summary(break_point)
plot(abhutondot.ts)
fitted.ts <- fitted(break_point, breaks = 3)
lines(fitted.ts, col = 4)
lines(confint(break_point, breaks = 3))
unique(as.integer(fitted.ts))
breakdates(break_point, breaks = 3)
fitted.ts <- fitted(break_point, breaks = 3)
autoplot(fitted.ts)
abhutondot_xreg <- Arima(abhutondot.ts,
order = c(0,1,1),
xreg = fitted.ts,
include.mean = TRUE)
summary(abhutondot_xreg)
abhutondot_xreg %>% forecast(h=24) %>%
autoplot() +
autolayer(fitted(abhutondot_xreg), series="Ajustados Intervención") +
ylab("") + xlab("Año") +
ggtitle("Total de personas") +
guides(colour=guide_legend(title="Estimación"))
abhutondot_xreg <- Arima(abhutondot.ts,
order = c(0,1,1),
xreg = fitted.ts,
include.mean = TRUE)
abhutondot_xreg %>% forecast(h=24) %>%
autoplot()
horizonte<- 24
plot(forecast(abhutondot_xreg, h = horizonte, xreg = rep(3, horizonte)))
plot(forecast(abhutondot_xreg, h = horizonte, xreg = rep(1, horizonte)))
horizonte<- 24
plot(forecast(abhutondot_xreg, h = horizonte, xreg = rep(1, horizonte)))
fitted.ts
mod1.1 <- Arima(unemp, order=c(2,1,0), seasonal=c(0,1,1))
mod1.1 %>% forecast(h=24) %>%
autoplot() +
autolayer(fitted(mod1.1), series="Ajustados") +
ylab("") + xlab("Año") +
ggtitle("Desempleo en USA") +
guides(colour=guide_legend(title="Estimación"))
ggplot(data = abhutondot_rs, aes(x = year)) + geom_line(aes(y = value, colour = variable)) +
scale_colour_manual(values = c("blue", "red"))
#Total de personas: hombres + mujeres
abhutondot.ts <- ts(abhutondot$boys + abhutondot$girls, frequency = 1 , start = abhutondot$year[1])
#Gráfica de la varianción de genero según mujeres
autoplot(abhutondot.ts) +  ylab("Total de inviduos") + xlab("Año")
summary(lm(abhutondot.ts ~ 1))
(break_point <- breakpoints(abhutondot.ts ~ 1))
plot(break_point)
summary(break_point)
plot(abhutondot.ts)
fitted.ts <- fitted(break_point, breaks = 3)
lines(fitted.ts, col = 4)
lines(confint(break_point, breaks = 3))
unique(as.integer(fitted.ts))
breakdates(break_point, breaks = 3)
fitted.ts <- fitted(break_point, breaks = 3)
autoplot(fitted.ts)
fitted.ts
level <- c(rep(0, break_point$breakpoints), rep(1, length(excess_ts) - break_point$breakpoints))
level <- c(rep(0, break_point$breakpoints), rep(1, length(excess_ts) - break_point$breakpoints))
abhutondot_xreg <- Arima(abhutondot.ts,
order = c(0,1,1),
xreg = fitted.ts,
include.mean = TRUE)
summary(abhutondot_xreg)
url <- "https://www.openintro.org/stat/data/arbuthnot.csv"
abhutondot <- read.csv(url, header=TRUE)
nrow(abhutondot)
head(abhutondot)
abhutondot_rs <- melt(abhutondot, id = c("year"))
head(abhutondot_rs)
tail(abhutondot_rs)
#######################################
#   Definiendo la serie como una TS   #
#######################################
#Taza de varianción de genero según mujeres
excess_frac <- (abhutondot$boys - abhutondot$girls)/abhutondot$girls
excess_ts <- ts(excess_frac, frequency = 1, start = abhutondot$year[1])
basicStats(excess_frac)
#######################################
#   Definiendo la serie como una TS   #
#######################################
#Gráfica de la serie
ggplot(data = abhutondot_rs, aes(x = year)) + geom_line(aes(y = value, colour = variable)) +
scale_colour_manual(values = c("blue", "red"))
#Gráfica de la varianción de genero según mujeres
autoplot(excess_ts) +  ylab("Taza de varianción de las mujeres") + xlab("Año")
acf2(excess_ts, nlag=60)
(break_point <- breakpoints(excess_ts ~ 1))
plot(break_point)
summary(break_point)
plot(break_point)
summary(break_point)
plot(excess_ts)
lines(fitted(break_point, breaks = 1), col = 4)
lines(confint(break_point, breaks = 1))
fitted.ts <- fitted(break_point, breaks = 1)
autoplot(fitted.ts)
fitted(break_point)[1] ;  fitted(break_point)[42] ;  fitted(break_point)[43] ; fitted(break_point)[82]
level <- c(rep(0, break_point$breakpoints), rep(1, length(excess_ts) - break_point$breakpoints))
level
(break_point <- breakpoints(abhutondot.ts ~ 1))
plot(break_point)
summary(break_point)
ggplot(data = abhutondot_rs, aes(x = year)) + geom_line(aes(y = value, colour = variable)) +
scale_colour_manual(values = c("blue", "red"))
abhutondot.ts <- ts(abhutondot$boys + abhutondot$girls, frequency = 1 , start = abhutondot$year[1])
autoplot(abhutondot.ts) +  ylab("Total de inviduos") + xlab("Año")
summary(lm(abhutondot.ts ~ 1))
(break_point <- breakpoints(abhutondot.ts ~ 1))
plot(break_point)
summary(break_point)
plot(abhutondot.ts)
fitted.ts <- fitted(break_point, breaks = 3)
lines(fitted.ts, col = 4)
lines(confint(break_point, breaks = 3))
unique(as.integer(fitted.ts))
breakdates(break_point, breaks = 3)
fitted.ts <- fitted(break_point, breaks = 3)
autoplot(fitted.ts)
fitted.ts
autoplot(fitted.ts)
fitted.ts
level1 <- c(rep(1, 15), rep(2, 18))
level1
level
level1 <- c(rep(1, 15), rep(2, 18), rep(3,19), rep(4,30))
level1
abhutondot_xreg <- Arima(abhutondot.ts,
order = c(0,1,1),
xreg = level1,
include.mean = TRUE)
summary(abhutondot_xreg)
summary(abhutondot_xreg)
horizonte<- 15
plot(forecast(abhutondot_xreg, h = horizonte, xreg = rep(1, horizonte)))
abhutondot_xreg %>% forecast(h=24) %>%
autoplot() +
autolayer(fitted(abhutondot_xreg), series="Ajustados") +
ylab("") + xlab("Año") +
ggtitle("Desempleo en USA") +
guides(colour=guide_legend(title="Estimación"))
horizonte<- 15
plot(forecast(model_4, h = horizonte, xreg = rep(1, horizonte)))
url <- "https://www.openintro.org/stat/data/arbuthnot.csv"
abhutondot <- read.csv(url, header=TRUE)
nrow(abhutondot)
head(abhutondot)
abhutondot_rs <- melt(abhutondot, id = c("year"))
head(abhutondot_rs)
tail(abhutondot_rs)
#######################################
#   Definiendo la serie como una TS   #
#######################################
#Taza de varianción de genero según mujeres
excess_frac <- (abhutondot$boys - abhutondot$girls)/abhutondot$girls
excess_ts <- ts(excess_frac, frequency = 1, start = abhutondot$year[1])
#######################################
#  Algunas estadísticas descriptivas  #
#######################################
basicStats(excess_frac)
#######################################
#   Definiendo la serie como una TS   #
#######################################
#Gráfica de la serie
ggplot(data = abhutondot_rs, aes(x = year)) + geom_line(aes(y = value, colour = variable)) +
scale_colour_manual(values = c("blue", "red"))
#Gráfica de la varianción de genero según mujeres
autoplot(excess_ts) +  ylab("Taza de varianción de las mujeres") + xlab("Año")
#######################################
#    Identificación de la serie       #
#######################################
# ¿Por qué podemos decir que nuestra serie es estacionaria?
# Realicemos el proceso de identificación
acf2(excess_ts, nlag=60)
#######################################
#      Cambios estructurales          #
#######################################
#Normalmente, podemos observar un cambio o identificar la intervención mediante conocimiento.
#Tambien es posible mediante
(break_point <- breakpoints(excess_ts ~ 1))
plot(break_point)
summary(break_point)
#El valor mínimo de BIC se alcanza cuando m = 1, por lo que solo se determina
#un punto de ruptura correspondiente al año 1670. Tracemos la serie temporal
#original contra su ruptura estructural y su intervalo de confianza.
plot(excess_ts)
lines(fitted(break_point, breaks = 1), col = 4)
lines(confint(break_point, breaks = 1))
fitted.ts <- fitted(break_point, breaks = 1)
autoplot(fitted.ts)
fitted(break_point)[1] ;  fitted(break_point)[42] ;  fitted(break_point)[43] ; fitted(break_point)[82]
#Nótese que el valor resulta como la constante donde la media es estimada, a partir de la observación 43
#vemos un cambio en el nivel de la serie.
###################################
#  Estimación de 6 modelos ARIMA  #
###################################
#Se van a estimar los siguientes 6 modelos:
# 1. non seasonal (1,1,1), as determined by auto.arima() within forecast package
# 2. seasonal (1,0,0)(0,0,1)[10]
# 3. seasonal (1,0,0)(1,0,0)[10]
# 4. seasonal (0,0,0)(0,0,1)[10] with level shift regressor as intervention variable
# 5. seasonal (1,0,0)(0,0,1)[10] with level shift regressor as intervention variable
# 6. non seasonal (1,0,0) with level shift regressor as intervention variable
###################################
#  ARIMA 1. non seasonal (1,1,1)  #
###################################
(model_1 <- auto.arima(excess_ts, stepwise = FALSE, trace = TRUE))
summary(model_1)
#######################################
#  ARIMA 2.  seasonal (1,0,0)(0,0,1)  #
#######################################
model_2 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(0,0,1), period = 10), include.mean = TRUE)
summary(model_2)
#######################################
#  ARIMA 3. seasonal (1,0,0)(1,0,0)   #
#######################################
model_3 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(1,0,0), period = 10), include.mean = TRUE)
summary(model_3)
########################################################
#  ARIMA 4.  seasonal (0,0,0)(0,0,1)                   #
# with level shift regressor as intervention variable  #
########################################################
#OJO!  así es como definims la intervención
level <- c(rep(0, break_point$breakpoints), rep(1, length(excess_ts) - break_point$breakpoints))
# Nótese como introduje variables controles con la función rep
model_4 <- Arima(excess_ts, order = c(0,0,0), seasonal = list(order = c(0,0,1), period = 10), xreg = level, include.mean = TRUE)
summary(model_4)
########################################################
#  ARIMA 5.  seasonal (1,0,0)(0,0,1)                   #
# with level shift regressor as intervention variable  #
########################################################
model_5 <- Arima(excess_ts, order = c(1,0,0), seasonal = list(order = c(0,0,1), period=10),  xreg = level, include.mean = TRUE)
summary(model_5)
########################################################
#  6. non seasonal (1,0,0)                             #
# with level shift regressor as intervention variable  #
########################################################
model_6 <- Arima(excess_ts, order = c(1,0,0), xreg = level, include.mean = TRUE)
summary(model_6)
df <- data.frame(col_1_res = c(model_1$aic, model_2$aic, model_3$aic, model_4$aic, model_6$aic),
col_2_res = c(model_1$aicc, model_2$aicc, model_3$aicc, model_4$aicc, model_6$aicc),
col_3_res = c(model_1$bic, model_2$bic, model_3$bic, model_4$bic, model_6$bic))
colnames(df) <- c("AIC", "AICc", "BIC")
rownames(df) <- c("ARIMA(1,1,1)",
"ARIMA(1,0,0)(0,0,1)[10]",
"ARIMA(1,0,0)(1,0,0)[10]",
"ARIMA(0,0,0)(0,0,1)[10] with level shift",
"ARIMA(1,0,0) with level shift")
formattable(df)
model_4 %>% forecast(h=24) %>%
autoplot() +
autolayer(fitted(model_4), series="Ajustados") +
ylab("") + xlab("Año") +
ggtitle("Desempleo en USA") +
guides(colour=guide_legend(title="Estimación"))
gold2 <- na.interp(gold)
autoplot(gold2, series="Interpolated") +
autolayer(gold, series="Original") +
scale_colour_manual(
values=c(`Interpolated`="red",`Original`="gray"))
tsoutliers(gold)
gold[768:772]
gold %>%
tsclean() %>%
ets() %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="MAM") %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="MAM") %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="ZZZ") %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="ADM") %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="ADM") %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="AMM") %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="AMM") %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="MNM", damped = NULL) %>%
forecast(h=50) %>%
autoplot()
gold %>%
tsclean() %>%
ets(model ="ZZZ", damped = NULL) %>%
forecast(h=50) %>%
autoplot()
tsoutliers(gold)
gold[768:772]
